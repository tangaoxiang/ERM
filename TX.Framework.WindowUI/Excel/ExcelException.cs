#region COPYRIGHT
//
//     THIS IS GENERATED BY TEMPLATE
//     
//     AUTHOR  :     ROYE
//     DATE       :     2010
//
//     COPYRIGHT (C) 2010, TIANXIAHOTEL TECHNOLOGIES CO., LTD. ALL RIGHTS RESERVED.
//
#endregion

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Runtime.Serialization;

namespace System.Office.Excel
{
    /// <summary>
    /// General exception that gets thrown upon an error with the excel.
    /// </summary>
    [Serializable]
    public class ExcelException : Exception
    {
        /// <summary>
        /// Initializes a new instance of the ExcelException class
        /// </summary>
        public ExcelException()
        {
        }

        /// <summary>
        /// Initializes a new instance of the ExcelException class with a specified error message
        /// </summary>
        /// <param name="message">A message that describes the error.</param>
        public ExcelException(string message)
            : base(message)
        {
        }

        /// <summary>
        /// Initializes a new instance of the ExcelException class with a specified error message and 
        /// a reference to the inner exception that is the cause of this exception.
        /// </summary>
        /// <param name="message">A message that describes the error.</param>
        /// <param name="inner">The exception that is the cause of the current exception.</param>
        public ExcelException(string message, Exception inner)
            : base(message, inner)
        {
        }

        /// <summary>
        /// Initializes a new instance of the ExcelException class with serialized data.
        /// </summary>
        /// <param name="info">The object that holds the serialized object data.</param>
        /// <param name="context">The contextual information about the source or destination.</param>
        protected ExcelException(SerializationInfo info, StreamingContext context)
            : base(info, context)
        {
        }
    }
}
